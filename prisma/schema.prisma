// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum Recurrence {
  NONE
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
  YEARLY
  RANGE
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  accounts      Account[]
  note          Note[]
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id            String @id @default(uuid())
  email         String
  token         String @unique
  expires       DateTime

  @@unique([email, token])
}

model Note {
  id            String @id @default(uuid())
  title         String
  description   String?
  dates         DateTime[]
  recurrence    Recurrence
  // range         Range[]
  userId        String
  user          User   @relation(fields: [userId], references: [id])
}

// model Range {
//   id            String @id @default(uuid())
//   startDate     DateTime
//   endDate       DateTime
//   noteId        String
//   note          Note   @relation(fields: [noteId], references: [id], onDelete: Cascade)

//   @@index([noteId])
// }